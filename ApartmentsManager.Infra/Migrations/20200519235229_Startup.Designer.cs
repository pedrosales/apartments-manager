// <auto-generated />
using System;
using ApartmentsManager.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApartmentsManager.Infra.Migrations
{
    [DbContext(typeof(ApartmentsManagerContext))]
    [Migration("20200519235229_Startup")]
    partial class Startup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApartmentsManager.Domain.Entities.Apartment", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Block")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("CondominiumId")
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("User")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.HasIndex("CondominiumId");

                    b.ToTable("Apartment");
                });

            modelBuilder.Entity("ApartmentsManager.Domain.Entities.Condominium", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("varchar(160)")
                        .HasMaxLength(160);

                    b.Property<string>("Country")
                        .HasColumnType("varchar(160)")
                        .HasMaxLength(160);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(160)")
                        .HasMaxLength(160);

                    b.Property<string>("Neighborhood")
                        .HasColumnType("varchar(160)")
                        .HasMaxLength(160);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Street")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("User")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("User");

                    b.ToTable("Condominium");
                });

            modelBuilder.Entity("ApartmentsManager.Domain.Entities.Resident", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ApartmentId")
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(160)")
                        .HasMaxLength(160);

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("User")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("User");

                    b.ToTable("Resident");
                });

            modelBuilder.Entity("ApartmentsManager.Domain.Entities.Apartment", b =>
                {
                    b.HasOne("ApartmentsManager.Domain.Entities.Condominium", "Condominium")
                        .WithMany("Apartments")
                        .HasForeignKey("CondominiumId");
                });

            modelBuilder.Entity("ApartmentsManager.Domain.Entities.Resident", b =>
                {
                    b.HasOne("ApartmentsManager.Domain.Entities.Apartment", "Apartment")
                        .WithMany("Residents")
                        .HasForeignKey("ApartmentId");
                });
#pragma warning restore 612, 618
        }
    }
}
